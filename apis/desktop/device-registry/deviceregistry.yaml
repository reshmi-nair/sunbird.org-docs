openapi: 3.0.1
info:
  title: Sunbird Desktop register API
  description: This is the API used in Sunbird Desktop Application to get the token
  termsOfService: https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE
  contact:
    email: info@sunbird.org
  version: "2.0"
servers:
- url: https://staging.open-sunbird.org/api/api-manager/v2
paths:
  /consumer/desktop_device/credential/register:
    post:
      tags:
      - Desktop device registry API
      summary: Get API token
      description: "This API is used to get the token.\n   - **_/consumer/desktop_device/credential/register/_**\
        \ endpoint helps to get the token.  \n   - Required\
        \ fields cannot be left null or empty    "
      operationId: Get API token
      parameters:
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource.Possible\
          \ media types can be:- \n  - Application/json\n  - Multipart/form-data\n\
          \  - Application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:'\
          \            \n - JSON           \nThe body is the representation of the\
          \ resource object to get the token"
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      responses:
        200:
          description: SUCCESS. The operation was successful!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenResponse'
        500:
          description: '''INTERNAL SERVER ERROR. We track these errors automatically
            and try to set it right at the earliest. Try refreshing the page. If the
            problem persists contact us at info@sunbird.org.'''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenErrorResponse'
      x-codegen-request-body-name: Body
components:
  schemas:
    Request:
      title: Registry Request
      required:
      - request
      type: object
      properties:
        request:
          title: RegistryObject
          required:
          - key
          type: object
          properties:
            key:
              type: string
              description: Device id
    GetTokenResponse:
      description: Get Token Response
      allOf:
      - $ref: '#/components/schemas/ResponseHeader'
      - $ref: '#/components/schemas/ResultWithToken'
    ResultWithToken:
      title: Result Containing token
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Token'
    Token:
      title: Token details
      type: object
      properties:
        key:
          type: string
          description: key
        secret:
          type: string
          description: secret
        token:
          type: string
          description: token
    ResponseHeader:
      title: ResponseHeader
      type: object
      properties:
        id:
          type: string
          description: Represents the unique API Identifier
        ver:
          type: string
          description: Represents the API version information
        ets:
          type: number
          description: Represents the current time stamp
        params:
          $ref: '#/components/schemas/ResponseParams'
    ResponseParams:
      title: Response Parameter
      type: object
      properties:
        resmsgid:
          type: string
          description: ID represents the response uniquely
        msgid:
          type: string
          description: Represents the unique ID of the response message
        err:
          type: string
          description: Represents the Error Code in case the execution fails
        status:
          type: string
          description: Represents the Response status when an API is called
        errmsg:
          type: string
          description: Represents the text that is part of response status
    GetTokenErrorResponse:
      title: Get Token Error Response
      allOf:
      - $ref: '#/components/schemas/ResponseParams'
      - $ref: '#/components/schemas/ResponseHeader'
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header
